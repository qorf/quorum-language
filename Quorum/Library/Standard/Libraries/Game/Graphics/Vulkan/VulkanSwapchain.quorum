package Libraries.Game.Graphics.Vulkan
use Libraries.Containers.Array

class VulkanSwapchain

    VulkanDevice device = undefined
    VulkanSurface surface = undefined
    Array<VulkanImageView> imageViews = undefined
    Array<VulkanSemaphore> imageAcquiredSemaphores = undefined
    Array<VulkanSemaphore> imageRenderCompleteSemaphores = undefined

    boolean initialized = false

    // The info is set during the Create action.
    VulkanSwapchainInfo info = undefined

    action Create(VulkanDevice device, VulkanSurface surface, VulkanSwapchainInfo swapchainInfo) returns boolean
        info = swapchainInfo:Copy()

        if info:GetImageSharingMode() < 0
            VulkanConstants constants
            if info:GetQueueFamilyIndices() not= undefined and info:GetQueueFamilyIndices():GetSize() > 0
               info:SetImageSharingMode(constants:SHARING_MODE_CONCURRENT)
            else
                info:SetImageSharingMode(constants:SHARING_MODE_EXCLUSIVE)
            end
        end

        output "Creating Swapchain..."
        boolean result = CreateNative(device, surface, info)
        if not result
            return false
        end
        
        output "Getting Swapchain images..."
        Array<VulkanImage> images
        result = GetSwapchainImages(images, device)
        if not result
            return false
        end

        Array<VulkanImageView> imageViews
        me:imageViews = imageViews
        
        output "Creating image views and semaphores in the Swapchain..."
        // For each image in the Swapchain, wrap it in an ImageView and create semaphores for fetching and rendering to the image.
        integer i = 0
        repeat while i < images:GetSize()
            VulkanImageView view
            result = view:Create(device, images:Get(i), info:GetImageViewInfo())
            if not result
                return false
            end

            imageViews:Add(view)

            VulkanSemaphore acquireSemaphore
            result = acquireSemaphore:Create(device)
            if not result
                return false
            end

            VulkanSemaphore renderSemaphore
            result = renderSemaphore:Create(device)
            if not result
                return false
            end

            i = i + 1
        end

        output "Finished swapchain creation, success = " + result
        if result
            me:device = device
            me:surface = surface
            initialized = true
        end

        return result
    end

    private system action CreateNative(VulkanDevice device, VulkanSurface surface, VulkanSwapchainInfo info) returns boolean

    private system action GetSwapchainImages(Array<VulkanImage> images, VulkanDevice device) returns boolean

    action GetImageView(integer index) returns VulkanImageView
        return imageViews:Get(index)
    end

    action GetImageCount returns integer
        return info:GetImageCount()
    end

    action GetImageWidth returns integer
        return info:GetImageWidth()
    end

    action GetImageHeight returns integer
        return info:GetImageHeight()
    end

    action GetImageFormat returns integer
        return info:GetImageFormat()
    end

    action GetColorSpace returns integer
        return info:GetColorSpace()
    end

    action GetImageUsage returns integer
        return info:GetImageUsage()
    end

    action GetImageSharingMode returns integer
        return info:GetImageSharingMode()
    end

    action GetCompositeAlpha returns integer
        return info:GetCompositeAlpha()
    end

    action GetPresentMode returns integer
        return info:GetPresentMode()
    end

    action GetImageArrayLayers returns integer
        return info:GetImageArrayLayers()
    end

    action GetQueueFamilyIndices returns Array<integer>
        return info:GetQueueFamilyIndices()
    end

    action GetImageViewInfo returns VulkanImageViewInfo
        return info:GetImageViewInfo()
    end

    action GetSurface returns VulkanSurface
        return surface
    end

    action GetDevice returns VulkanDevice
        return device
    end

end