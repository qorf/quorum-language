package Libraries.Game.Graphics.Vulkan
use Libraries.Containers.Array

class VulkanDescriptorSet

    VulkanDevice device = undefined
    boolean initialized = false

    failureCode = 0

    action Create(VulkanDevice device, VulkanDescriptorPool pool, VulkanDescriptorSetLayout layout) returns boolean
        boolean success = CreateNative(device, pool, layout)

        if success
            me:device = device
            initialized = true
            failureCode = 0
        end

        return success
    end

    private system action CreateNative(VulkanDevice device, VulkanDescriptorPool pool, VulkanDescriptorSetLayout layout) returns boolean

    /*
    After creating the descriptor set, resources must be linked to the individual descriptors using LinkResources.
    */
    action LinkResources(VulkanDescriptorResourcesInfo info)
        LinkResources(device, info)
    end

    /*
    After creating the descriptor set, resources must be linked to the individual descriptors using LinkResources.
    */
    action LinkResources(Array<VulkanDescriptorResourcesInfo> infoArray)
        LinkResources(device, infoArray)
    end

    private system action LinkResources(VulkanDevice device, VulkanDescriptorResourcesInfo info)

    private system action LinkResources(VulkanDevice device, Array<VulkanDescriptorResourcesInfo> infoArray)

    /*
    If the "Create" action fails, this action will return a code representing the failure reason. If no failure has occurred,
    this will return 0 (corresponding to the VK_SUCCESS value in the Vulkan spec).
    */
    action GetFailureCode returns integer
        return failureCode
    end

end