package Libraries.Game.Graphics.Vulkan

use Libraries.System.Logging.Logger
use Libraries.System.Logging.ConsoleLogger
use Libraries.Containers.Array

/*This class is a Quorum representation of a Vulkan instance.

A Vulkan Instance is an interface that allows the application to send
requests to the Vulkan library. Most commonly, Vulkan is used for rendering
graphics, but it can also be used for any other hardware accelerated
computations, such as performing statistical calculations on the GPU.

An Instance isn't usually used directly. More often, it is used as a shared
resource by other Vulkan objects, such as Vulkan Physical Devices.*/
class VulkanInstance
    
    // A logger used to report any errors or warnings from Vulkan. By default, a ConsoleLogger is provided,
    // but the user can replace this with any logger of their choosing.
    Logger logger = undefined
    
    boolean hasValidationLayers = false
    boolean initialized = false
    
    /*
    This action initializes the Vulkan instance with the proper extensions needed for basic rendering and screen display. 
    For fine control over which extensions and layers are used, use the Create action instead.
    If the instance is successfully created, this function returns true.
    If the instance cannot be created, this action returns false instead.

    Attribute: Parameter applicationName The title of the application that is using this instance. Hardware agents can use this to identify your app, if they choose.
    Attribute: Parameter applicationVersion The version number of your application. Hardware agents can use this to identify the version of your app, if they choose.
    Attribute: Parameter apiVersion The Vulkan API version to use. This must be an encoded API number (see "ConvertToAPIVersionID" in VulkanUtilities).
    Attribute: Parameter useValidationLayers Whether or not the instance should use Validation Layers, if they are available. If this is true and they aren't available, the instance will be made without them.
    Attribute: Returns True if the instance is successfully created, or false if it could not be created.
    */
    action CreateGraphicsInstance(text applicationName, integer applicationVersion, integer apiVersion, boolean useValidationLayers) returns boolean
        VulkanUtilities utility
        if utility:AreValidationLayersSupported() = false
            useValidationLayers = false
        end
        
        Array<text> requiredLayers
        if useValidationLayers
            utility:GetSupportedValidationLayers(requiredLayers)
        end

        Array<text> requiredExtensions
        utility:GetRequiredDisplayExtensions(requiredExtensions)

        // If no extensions were returned, then there aren't any available for displaying Vulkan graphics to a screen.
        // Since it won't meet our needs, abort early and report failure.
        if requiredExtensions:IsEmpty()
            output "Extensions was empty!"
            return false
        end

        // Get platform specific extensions, such as the Mac-specific extensions for MoltenVK support.
        utility:GetRequiredPlatformExtensions(requiredExtensions, useValidationLayers)

        // If validation is being used and we don't have a logger, provide a basic logger to output to the console.
        if logger = undefined and useValidationLayers = true
            ConsoleLogger consoleLogger
            logger = consoleLogger
        end

        return Create(applicationName, applicationVersion, apiVersion, requiredLayers, requiredExtensions)
    end

    /*
    This action initializes the Vulkan instance using the provided layers and extensions. The layers and extensions available
    on this device can be found using the VulkanUtilities class.
    If the instance is successfully created, this function returns true.
    If the instance cannot be created, this action returns false instead.

    Attribute: Parameter applicationName The title of the application that is using this instance. Hardware agents can use this to identify your app, if they choose.
    Attribute: Parameter applicationVersion The version number of your application. Hardware agents can use this to identify the version of your app, if they choose.
    Attribute: Parameter apiVersion The Vulkan API version to use. This must be an encoded API number (see "ConvertToAPIVersionID" in VulkanUtilities).
    Attribute: Parameter layerNames An array containing the names of each of the layers to be used by the Vulkan instance.
    Attribute: Parameter extensionNames An array containing the names of each of the extensions to be used by the Vulkan instance.
    Attribute: Returns True if the instance is successfully created, or false if it could not be created.
    */
    action Create(text applicationName, integer applicationVersion, integer apiVersion, Array<text> layerNames, Array<text> extensionNames) returns boolean
        hasValidationLayers = ContainsValidationName(layerNames)

        boolean result = CreateNative(applicationName, applicationVersion, apiVersion, layerNames, extensionNames)
        if result
            initialized = true
        end

        return result
    end
    
    private system action CreateNative(text applicationName, integer applicationVersion, integer apiVersion, Array<text> layerNames, Array<text> extensionNames) returns boolean
    
    action IsInitialized returns boolean
        return initialized
    end
    
    private action ContainsValidationName(Array<text> names) returns boolean
        VulkanConstants constants
        boolean result = names:Has(constants:KHRONOS_VALIDATION_LAYER)
            or names:Has(constants:LUNARG_STANDARD_VALIDATION_LAYER)
            or names:Has(constants:LUNARG_PARAMETER_VALIDATION_LAYER)
            or names:Has(constants:LUNARG_OBJECT_TRACKER_VALIDATION_LAYER)
            or names:Has(constants:LUNARG_CORE_VALIDATION_LAYER)
            or names:Has(constants:GOOGLE_THREADING_VALIDATION_LAYER)
            or names:Has(constants:GOOGLE_UNIQUE_OBJECTS_VALIDATION_LAYER)
        
        return result
    end

    /*This action sets the Logger that should be used by this Vulkan instance. All Vulkan errors and warnings (including any that
would be produced by validation layers, if there are any) will be reported to the logger. By default, no logger is provided
if validation layers are not used, and a ConsoleLogger is provided if validation layers are on.

Attribute: Parameter logger A logger to handle errors and warnings from the Vulkan instance.*/
    action SetLogger(Logger logger)
        me:logger = logger
    end
    
    /*This action returns the Logger that is being used by this Vulkan instance. All Vulkan errors and warnings (including any that
would be produced by validation layers, if there are any) will be reported to the logger. By default, no logger is provided if
validation layers are not used, and a ConsoleLogger is provided if validation layers are on.

Attribute: Returns The Logger being used to handle errors and warnings from the Vulkan instance.*/
    action GetLogger returns Logger
        return logger
    end
    
    /*This action destroys the instance and releases all system resources related to it. Once the instance is disposed, it can't
be used anymore, so this should only be done to clean up resources when the instance is no longer needed.*/
    system action Dispose

    action HasValidationLayers returns boolean
        return hasValidationLayers
    end
    
end