package Libraries.Game.Graphics.Shaders

use Libraries.Game.GameStateManager
use Libraries.Game.Graphics.GraphicsManager
use Libraries.Game.Graphics.Shaders.OpenGL.Fragment.DefaultFragmentShader3DOpenGL
use Libraries.Game.Graphics.Shaders.OpenGL.Vertex.DefaultVertexShader3DOpenGL
use Libraries.Game.Graphics.Shaders.OpenGL.Mapping.DefaultShaderMapping3DOpenGL
use Libraries.Game.Graphics.Shaders.OpenGL.OpenGLShaderProgram

class DefaultShaderProgram3D is ShaderProgram

    on create
        GameStateManager gameState
        ShaderManager manager = gameState:GetShaderManager()
        SetName(manager:DEFAULT_3D_SHADER_PROGRAM)

        DefaultVertexShader3DOpenGL vertex
        DefaultFragmentShader3DOpenGL fragment

        Add(vertex)
        Add(fragment)

        DefaultShaderMapping3DOpenGL mapping
        SetShaderMapping(mapping)

        // TO-DO: Modify these to whatever new system we use with the updated LWJGL/OpenGL version
        OpenGLShaderProgram glProgram = cast(OpenGLShaderProgram, GetShaderProgramStrategy())
        glProgram:AddOrderedVertexInput("a_position")
        glProgram:AddOrderedVertexInput("a_color")
    end

end