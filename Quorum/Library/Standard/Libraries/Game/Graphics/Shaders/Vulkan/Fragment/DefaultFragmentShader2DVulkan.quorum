package Libraries.Game.Graphics.Shaders.Vulkan.Fragment

use Libraries.Game.GameStateManager
use Libraries.Game.Graphics.Shaders.Shader
use Libraries.Game.Graphics.Shaders.ShaderManager
use Libraries.Game.Graphics.Shaders.DefaultAttributeNames

class DefaultFragmentShader2DVulkan is Shader

    on create
        SetType(parent:Shader:FRAGMENT_SHADER)
        GameStateManager gameState
        ShaderManager manager = gameState:GetShaderManager()
        SetName(manager:DEFAULT_2D_FRAGMENT_SHADER)

        DefaultAttributeNames attributes

        SetCode(GetVersionHeader() +
"
" +
"#ifdef GL_ES
    #define LOWP lowp
    precision mediump float;
#else
    #define LOWP 
#endif

// Adds support for nonuniformEXT and unsized descriptor arrays.
#extension GL_EXT_nonuniform_qualifier : require

layout(set = 0, binding = 1) uniform sampler immutableSampler;
layout(set = 1, binding = 0) uniform texture2D globalTextures[];

layout (location = 0) in vec4 v_color;
layout (location = 1) in vec2 v_textureCoords;
layout (location = 2) flat in uint v_textureIndex;

layout (location = 0) out vec4 outputColor;

void main()
{
    outputColor = texture(nonuniformEXT(sampler2D(globalTextures[v_textureIndex], immutableSampler)), v_textureCoords) * v_color;
}"
)
    end

end
