package Libraries.Game.Graphics.Shaders.OpenGL.Fragment

/*
The HollowBoxPatternFragmentShaderPart isn't a full fragment shader, but rather
a post-processing "addendum" to be used alongside another, full shader,
such as the ControlFragmentShader.
*/
class HollowBoxPatternFragmentShaderPartOpenGL

    private action GetExtraInputs returns text
        return 
"in float v_patternDistance;
in float v_patternRotation;
in float v_patternThickness;
in vec4 v_patternColor;"
    end

    private action GetAppendedCode returns text
        return "resultColor = postProcess(resultColor);"
    end

    private action GetExtraFunctions returns text
        return "vec4 postProcess(vec4 startColor)
{
    vec2 point = v_texCoords.xy;
    point.y = point.y / v_aspectRatio;
    point.x = mod(point.x, v_patternDistance);
    point.y = mod(point.y, v_patternDistance);

    float xDistance = abs(point.x - v_patternDistance / 2.0);
    float yDistance = abs(point.y - v_patternDistance / 2.0);
    float distance = abs(max(xDistance, yDistance) - v_patternDistance / 4.0);

    vec4 result = mix(v_patternColor, startColor, smoothstep(0.0, v_patternThickness / 2.0, distance));
    result.a = startColor.a;

    return result;
}"
    end

end