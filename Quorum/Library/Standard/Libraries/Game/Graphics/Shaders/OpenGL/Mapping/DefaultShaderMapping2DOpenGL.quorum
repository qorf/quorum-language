package Libraries.Game.Graphics.Shaders.OpenGL.Mapping

use Libraries.Compute.Matrix4
use Libraries.Containers.Array
use Libraries.Containers.Integer32BitArray
use Libraries.Game.GameDisplay
use Libraries.Game.Graphics.Camera
use Libraries.Game.Graphics.VertexAttribute
use Libraries.Game.Graphics.VertexAttributes
use Libraries.Game.Graphics.Mesh
use Libraries.Game.Graphics.Drawable
use Libraries.Game.GameStateManager
use Libraries.Containers.Number32BitArray
use Libraries.Game.Graphics.GraphicsManager
use Libraries.Compute.Vector3
use Libraries.Game.Graphics.OpenGL.OpenGLConstants
use Libraries.Game.Graphics.DefaultVertexAttributes2D
use Libraries.Game.Graphics.VertexData
use Libraries.Game.Graphics.DrawableShape
use Libraries.Game.Graphics.Shaders.ShaderProgram

class DefaultShaderMapping2DOpenGL is BatchingShaderMapping2DOpenGL

    /*
    This action is called when the mapping is created. It must be used to set
    the initial values of the Mesh using the Mesh's Load action.
    */
    private action InitializeMesh(Mesh mesh)
        DefaultVertexAttributes2D attributes
        mesh:Load(false, 4800, 1200, attributes)

        integer length = 1200
        Integer32BitArray indices
        indices:SetSize(length)

        integer indexCounter = 0
        integer vertexCounter = 0

        // Setup the indices to make pairs of triangles to render quads of vertices.
        repeat while indexCounter < length
            indices:Set(indexCounter, vertexCounter)
            indices:Set(indexCounter + 1, vertexCounter + 1)
            indices:Set(indexCounter + 2, vertexCounter + 2)
            indices:Set(indexCounter + 3, vertexCounter + 2)
            indices:Set(indexCounter + 4, vertexCounter + 3)
            indices:Set(indexCounter + 5, vertexCounter)

            indexCounter = indexCounter + 6
            vertexCounter = vertexCounter + 4
        end

        mesh:SetIndices(indices)
    end

    action SetVertexData(ShaderProgram program, Drawable drawable, DrawableShape shape)
        /*
        Do nothing. The default shader mapping doesn't need to set any
        vertex values past the defaults already handled by the DrawableShape.
        */
    end

end