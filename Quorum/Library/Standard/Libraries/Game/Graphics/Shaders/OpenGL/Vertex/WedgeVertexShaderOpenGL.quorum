package Libraries.Game.Graphics.Shaders.OpenGL.Vertex

use Libraries.Game.Graphics.Shaders.Shader
use Libraries.Game.Graphics.Shaders.DefaultAttributeNames

class WedgeVertexShaderOpenGL is Shader

    constant text SHADER_NAME = "Wedge Vertex Shader"

    on create
        SetType(parent:Shader:VERTEX_SHADER)
        SetName(SHADER_NAME)

        DefaultAttributeNames attributes
        SetCode(GetVersionHeader() +
"
" + GetPreprocessorDefinitions() + "

in vec4 " + attributes:POSITION + ";
in vec4 " + attributes:COLOR + ";
in vec2 " + attributes:TEXTURE_COORDINATES + "0;
in float a_innerRadius;
in float a_outerRadius;
in float a_minAngle;
in float a_maxAngle;
in vec2 a_originPoint;
uniform mat4 u_projTrans;
out vec4 v_color;
out vec2 v_texCoords;
out float v_innerRadius;
out float v_outerRadius;
out float v_minAngle;
out float v_maxAngle;
out vec2 v_originPoint;

" + GetExtraInputs() + "

" + GetExtraFunctions() + "

void main()
{
    v_color = " + attributes:COLOR + ";
    v_color.a = v_color.a * (255.0/254.0);
    v_texCoords = " + attributes:TEXTURE_COORDINATES + "0;
    v_innerRadius = a_innerRadius;
    v_outerRadius = a_outerRadius;
    v_minAngle = a_minAngle;
    v_maxAngle = a_maxAngle;
    v_originPoint = a_originPoint;

    " + GetAppendedCode() + "

    gl_Position =  u_projTrans * " + attributes:POSITION + ";
}"
)
    end

    private action GetPreprocessorDefinitions returns text
        return ""
    end

    private action GetExtraInputs returns text
        return ""
    end

    private action GetExtraFunctions returns text
        return ""
    end

    private action GetAppendedCode returns text
        return ""
    end

end