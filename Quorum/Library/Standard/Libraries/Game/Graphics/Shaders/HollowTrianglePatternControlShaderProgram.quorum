package Libraries.Game.Graphics.Shaders

use Libraries.Game.GameStateManager
use Libraries.Game.Graphics.Shaders.OpenGL.Mapping.PatternControlShaderMappingOpenGL
use Libraries.Game.Graphics.Shaders.OpenGL.Vertex.PatternControlVertexShaderOpenGL
use Libraries.Game.Graphics.Shaders.OpenGL.Fragment.HollowTrianglePatternControlFragmentShaderOpenGL

class HollowTrianglePatternControlShaderProgram is ShaderProgram

    public constant text DEFAULT_NAME = "Hollow Triangle Pattern Control Shader Program"
    constant text VERTEX_NAME = "Pattern Control Vertex Shader"
    constant text FRAGMENT_NAME = "Hollow Triangle Pattern Control Fragment Shader"

    on create
        SetName(DEFAULT_NAME)
        GameStateManager gameState
        ShaderManager manager = gameState:GetShaderManager()
        
        if manager:HasShader(VERTEX_NAME)
            Shader vertex = manager:GetShader(VERTEX_NAME)
            Add(vertex)
        else
            PatternControlVertexShaderOpenGL vertex
            Add(vertex)
        end

        if manager:HasShader(FRAGMENT_NAME)
            Shader fragment = manager:GetShader(FRAGMENT_NAME)
            Add(fragment)
        else
            HollowTrianglePatternControlFragmentShaderOpenGL fragment
            Add(fragment)
        end

        PatternControlShaderMappingOpenGL mapping
        SetShaderMapping(mapping)
    end

end