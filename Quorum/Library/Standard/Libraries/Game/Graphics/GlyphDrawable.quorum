package Libraries.Game.Graphics
use Libraries.Game.Graphics.Shaders.ShaderManager
use Libraries.Game.Graphics.Shaders.ShaderProgram
use Libraries.Game.Graphics.Shaders.BorderedFontShaderProgram
use Libraries.Game.GameStateManager

/*
This class represents a Drawable containing a glyph (that is, a character from a font)
which can be drawn to the screen. In addition to the normal information that a Drawable
contains, this class also stores a glyph and handles outlining.
*/
class GlyphDrawable is Drawable

    constant text PROGRAM_NAME = "Bordered Font Program"

    Glyph glyph = undefined
    number outlineThickness = 0

    GameStateManager manager

    ColorGroup outlineColor = undefined

    action LoadGlyph(Glyph glyph)
        me:glyph = glyph
        Load(glyph:texture)
    end

    action LoadBorderedGlyph(Glyph glyph, number outlineThickness, ColorGroup outlineColor)
        me:outlineThickness = outlineThickness
        me:outlineColor = outlineColor

        if outlineThickness > 0
            ShaderManager shaderManager = manager:GetShaderManager()
            ShaderProgram program = shaderManager:GetShaderProgram(PROGRAM_NAME)
            if program = undefined
                BorderedFontShaderProgram newProgram
                newProgram:Compile()
                program = newProgram
            end

            SetShaderProgram(program)
        end

        LoadGlyph(glyph)
    end

    action Dispose
        glyph = undefined
        outlineThickness = 0
        outlineColor = undefined
        SetShaderProgram(undefined)
    end

    action GetOutlineColor returns ColorGroup
        return outlineColor
    end

    action SetOutlineColor(ColorGroup outlineColor)
        me:outlineColor = outlineColor
    end

    action GetOutlineThickness returns number
        return outlineThickness
    end

    action SetOutlineThickness(number outlineThickness)
        me:outlineThickness = outlineThickness
    end

    action GetGlyph returns Glyph
        return glyph
    end

end