package Libraries.Interface.Behaviors.Blocks

use Libraries.Interface.Behaviors.Behavior
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Interface.Events.DragAndDropEvent
use Libraries.Interface.Item
use Libraries.Interface.Controls.Blocks.CodeEditor
use Libraries.Containers.Array
use Libraries.Interface.Controls.Blocks.Block
use Libraries.Interface.Controls.Blocks.Palette.BlockPalette
use Libraries.Interface.Controls.Blocks.Palette.BlockPaletteItem
use Libraries.Interface.Controls.Blocks.BlockEnvironment
use Libraries.Interface.Item2D

class CodeEditorAcceptDraggedBlockBehavior is Behavior
    
    // The behavior that triggers when dragging begins.
    // This behavior contains info we need, so we store a reference here.
    // The reference is set when the behaviors are made in DefaultInputSets.
    BlockDragBehavior sourceDragBehavior = undefined
    
    integer lastCandidateLine = -2
    
    action Run(BehaviorEvent event)
        DragAndDropEvent dropEvent = event:GetDragAndDropEvent()
        Item received = dropEvent:GetDestination()
        
        Item source = dropEvent:GetSource()
        Item2D source2D = undefined
        if source is Item2D
            source2D = cast(Item2D, source)
            repeat until source2D is Block or source2D = undefined
                source2D = source2D:GetParent()
            end
        end
        
        // If the drag isn't attached to a block, ignore it.
        if source2D = undefined
            return now
        end

        if received is CodeEditor
            CodeEditor editor = cast(CodeEditor, received)
            number y = dropEvent:GetY() - editor:GetGlobalY()
            integer line = editor:GetNavigationIndexAtY(y)
            if line > editor:GetLineCount()
                line = editor:GetLineCount()
            end
            
            Array<Block> sourceBlocks = sourceDragBehavior:GetSourceBlocks()
            if sourceBlocks = undefined
                return now
            end
            
            if dropEvent:eventType = dropEvent:DRAGGING_CONTINUED
                // Ignore any drag requests if the source behavior hasn't started dragging "for real" yet.
                // This can occur if the drag is only a pixel or two, so it hasn't moved far enough yet to surpass the source behavior's distance threshold.
                if sourceDragBehavior:IsDraggingBlocks() = false
                    return now
                end
                
                if line not= lastCandidateLine
                    
                    if editor:CanAcceptPlaceholdersAtNavigationIndex(line) = false
                        if editor:HasPlaceholders()
                            editor:RemovePlaceholders()
                        else
                            // Do nothing, there's no placeholders there to adjust.
                        end
                    elseif editor:HasPlaceholders()
                        editor:MovePlaceholdersToNavigationIndex(line)
                    else
                        Array<Block> placeholders
                        integer i = 0
                        repeat while i < sourceBlocks:GetSize()
                            if sourceBlocks:Get(i):IsPlaceholder()
                                placeholders:Add(sourceBlocks:Get(i))
                            else
                                placeholders:Add(sourceBlocks:Get(i):CopyToPlaceholder())
                            end
                            i = i + 1
                        end
                        editor:InsertPlaceholdersAtNavigationIndex(line, placeholders)
                    end
                    
                    lastCandidateLine = line
                end
            elseif dropEvent:eventType = dropEvent:DRAGGED_OFF_DESTINATION
                if editor:HasPlaceholders()
                    editor:RemovePlaceholders()
                end
                lastCandidateLine = -2
            elseif dropEvent:eventType = dropEvent:DRAGGED_ONTO_DESTINATION
                // Don't do anything in this case. The work in the dragging continued case can cover this part.
            elseif dropEvent:eventType = dropEvent:DROPPED
                if sourceBlocks:IsEmpty() = false
                    Block firstBlock = sourceBlocks:GetFromFront()
                    Block lastBlock = sourceBlocks:GetFromEnd()
                    text toInsert = ""

                    BlockEnvironment environment = firstBlock:GetBlockEnvironment()
                    if environment not= undefined 
                        if firstBlock = lastBlock and firstBlock:IsPlaceholder()
                            toInsert = firstBlock:GetPlaceholderText() + toInsert:GetLineFeed()
                        else
                            toInsert = environment:GetCodeBetween(firstBlock:GetStartIndex(), lastBlock:GetEndIndex()) + toInsert:GetLineFeed()
                        end
                        lastCandidateLine = -2
                    
                        if editor:HasPlaceholders()
                            editor:ConvertPlaceholdersToBlocks(toInsert)
                        end
                    end
                    sourceBlocks = undefined
                    sourceDragBehavior:Reset()
                end
            end
        end
    end
    
    action SetSourceDragBehavior(BlockDragBehavior behavior)
        sourceDragBehavior = behavior
    end
    
    action GetSourceDragBehavior returns BlockDragBehavior
        return sourceDragBehavior
    end
    
end