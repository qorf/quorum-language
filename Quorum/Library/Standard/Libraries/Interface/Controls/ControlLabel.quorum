package Libraries.Interface.Controls

use Libraries.Game.Graphics.Label
use Libraries.Game.Graphics.ColorGroup
use Libraries.Interface.Controls.Control
use Libraries.Interface.Layouts.LayoutProperties
use Libraries.Interface.Views.View2D
use Libraries.Interface.Views.SelectionHighlightView
use Libraries.Interface.Views.ControlShaderView

class ControlLabel is Label
    
    boolean useSelectionColor = false
    boolean renderFocus = true

    on create
        SetPositionOnBaseLine(false)
        SetInterfaceOptionsKey("ControlLabel")
    end

    action GainedSelection
        renderFocus = true
        UseSelectionColor(true)
        parent:Control:GainedSelection()
    end

    action UnfocusedSelection
        renderFocus = false
        UseSelectionColor(true)
        parent:Control:GainedSelection()
    end

    action LostSelection
        renderFocus = false
        UseSelectionColor(false)
        parent:Control:LostSelection()
    end

    private action UseSelectionColor(boolean useSelection)
        useSelectionColor = useSelection
        parent:Label:ResetDrawableColors()
    end

    private action GetCurrentColor returns ColorGroup
        if useSelectionColor
            if renderFocus
                return GetSelectionFontColor()
            elseif GetUnfocusedSelectionFontColor() not= undefined
                return GetUnfocusedSelectionFontColor()
            end
        end
        return GetFontColor()
    end

    action IsRenderingSelection returns boolean
        return useSelectionColor
    end

    action IsRenderingFocus returns boolean
        return renderFocus
    end

    action LoadGraphics(LayoutProperties properties)
        parent:Label:LoadGraphics(properties)

        if properties:GetView2D() not= undefined
            SetView2D(properties:GetView2D())
        elseif GetView2D() = undefined
            ControlShaderView content
            content:Initialize()
            SetView2D(content)
        end
    end
end