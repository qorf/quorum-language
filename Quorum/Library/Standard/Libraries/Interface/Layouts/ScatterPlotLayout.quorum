package Libraries.Interface.Layouts
use Libraries.Interface.Controls.Charts.Chart
use Libraries.Interface.Controls.Control
use Libraries.Interface.Controls.Charts.ScatterPlot
use Libraries.Game.Graphics.Drawable
use Libraries.Containers.Array
use Libraries.Interface.Controls.Charts.ChartPoint
use Libraries.Interface.Controls.Icon
use Libraries.Interface.Controls.ControlLabel
use Libraries.Interface.Controls.Charts.Graphics.ResidualSquare
use Libraries.Interface.Controls.Charts.Graphics.RegressionLine
use Libraries.Interface.Controls.Charts.MovableRegressionSeries
use Libraries.Interface.Controls.Charts.ChartAreaPanel
use Libraries.Interface.Controls.Charts.Graphics.ChartDrawable

class ScatterPlotLayout is TwoVariableChartLayout
    action LayoutChartContent(Chart control, Control chartAreaContainer)
        if not (control is ScatterPlot)
            return now
        end
        
        ScatterPlot chart = cast(ScatterPlot, control)
        Array<ChartPoint> points = chart:GetChartPoints()
        if points = undefined
            return now
        end

        integer xAxisPaddingOffset = cast(integer, chart:GetHorizontalPanel():GetPaddingOffsetPercent()*chartAreaContainer:GetWidth())
        integer yAxisPaddingOffset = cast(integer, chart:GetVerticalPanel():GetPaddingOffsetPercent()*chartAreaContainer:GetHeight())
        number width = chartAreaContainer:GetWidth() - 2*xAxisPaddingOffset
        number height = chartAreaContainer:GetHeight() - 2*yAxisPaddingOffset
        number xMin = chart:GetXAxisMinimum()
        number xMax = chart:GetXAxisMaximum()
        number yMin = chart:GetYAxisMinimum()
        number yMax = chart:GetYAxisMaximum()

        // Set default point density
        integer pointRadius = chart:GetPointDensity()
        if pointRadius = 0
            pointRadius = cast(integer, width * 0.010 / 2) 
            if pointRadius < 4
                pointRadius = 4
            end
        end

        ScatterPlot scatterPlot = cast(ScatterPlot, chart)
        Array<ResidualSquare> squares = undefined
        boolean hasMovableResidualSquares = false

        if chart:IsShowingLinearRegression() and scatterPlot:IsShowingSquaresOfResiduals()
            squares = scatterPlot:GetResidualSquares()

            if chart:HasMovableRegressionLine()
                hasMovableResidualSquares = true
            end
        end

        i = 0
        repeat while i < points:GetSize()
            ChartPoint point = points:Get(i)
            
            point:SetSize(2 * pointRadius, 2 * pointRadius)

            point:SetPercentX((point:GetValueX() - xMin) / (xMax - xMin))
            point:SetPercentY((point:GetValueY() - yMin) / (yMax - yMin))
            integer x = cast(integer, point:GetPercentX() * width - (point:GetWidth() / 2.0)) + xAxisPaddingOffset
            integer y = cast(integer, point:GetPercentY() * height - (point:GetHeight() / 2.0)) + yAxisPaddingOffset
            point:SetPosition(x, y)

            //display an annoation of either series name point or letter code in a specified 
            //location(top or bottom)
            if point:ShowAnnotation() or chart:ShowAnnotations()
                ControlLabel pointLabel = point:GetAnnotation()
                if pointLabel not= undefined
                    integer annotX = cast(integer, x+pointRadius-(pointLabel:GetWidth()/2))
                    integer annotY = 0
                    integer labelDecent = pointLabel:GetFont():GetMaximumDescent()
                    if point:IsAnnotationLocationBottom()
                        annotY = cast(integer, y - pointLabel:GetHeight() - labelDecent)
                    elseif point:IsAnnotationLocationLeft()
                        annotY = cast(integer, y)
                        annotX = cast(integer, x - pointLabel:GetWidth() + labelDecent)
                    elseif point:IsAnnotationLocationRight()
                        annotY = cast(integer, y)
                        annotX = cast(integer, x + point:GetWidth() - labelDecent)
                    else
                        annotY = cast(integer, y+point:GetHeight() - labelDecent)
                    end
                    pointLabel:SetPosition(annotX, annotY)
                end
            end

            if chart:GetHorizontalFlag()
                SetChartDrawableSelectionArrow(point, pointRadius, true)
            else
                SetChartDrawableSelectionArrow(point, pointRadius, false)
            end

            if squares not= undefined
                ResidualSquare square = squares:Get(i)
                RegressionLine line = point:GetSeries():GetRegressionLine()
                if line not= undefined
                    boolean positiveSlope = (line:CalculateDependentValue(1) - line:CalculateDependentValue(0)) >= 0
    
                    number residual = square:GetResidual()
                    number percentSize = 0
                    number realSize = 0

                    if chart:GetHorizontalFlag()
                        percentSize = residual / (yMax - yMin)
                    else
                        percentSize = residual / (xMax - xMin)
                    end

                    if percentSize < 0
                        percentSize = -percentSize
                    end
    
                    if chart:GetHorizontalFlag()
                        realSize = percentSize * height
                    else
                        realSize = percentSize * width
                    end

                    square:SetSize(realSize, realSize)
    
                    number pointX = point:GetX() + point:GetWidth() / 2.0
                    number pointY = point:GetY() + point:GetHeight() / 2.0
    
                    if positiveSlope
                        if residual < 0
                            square:SetPosition(pointX, pointY)
                        else
                            square:SetPosition(pointX - realSize, pointY - realSize)
                        end
                    else
                        if residual < 0
                            square:SetPosition(pointX - realSize, pointY)
                        else
                            square:SetPosition(pointX, pointY - realSize)
                        end
                    end
                else
                    square:Hide()
                end
            end

            i = i + 1
        end

        if hasMovableResidualSquares
            if chart:IsSeparated()
                integer j = 0
                repeat while j < chart:GetNumberOfChartAreas()
                    ChartAreaPanel subArea = chart:GetSubChartAreas():Get(j)
                    MovableRegressionSeries series = subArea:GetMovableRegressionSeries()
                    series:RefreshResidualSquares()

                    j = j + 1
                end
            else
                MovableRegressionSeries series = chart:GetChartArea():GetMovableRegressionSeries()
                Array<ResidualSquare> movableSquares = series:GetResidualSquares()
                RegressionLine line = series:GetRegressionLine()
                series:RefreshResidualSquares()
            end
        end

        if chart:IsShowingLinearRegression()
            LayoutRegressionLines(chart, chartAreaContainer)
        end

        if chart:GetSelection():GetItem() not= undefined and chart:GetSelection():GetItem() is ChartDrawable
            ChartDrawable item = cast(ChartDrawable, chart:GetSelection():GetItem())
            if item:HasSelectionArrow() and item:HasSelectionBracket()
                item:AdjustSelectionBracketAndArrow()
            elseif item:HasSelectionArrow()
                item:AdjustSelectionArrow()
            end
        end
    end
end