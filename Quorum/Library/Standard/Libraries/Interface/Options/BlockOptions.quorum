package Libraries.Interface.Options

use Libraries.Containers.Iterator
use Libraries.Game.Graphics.ColorGroup

class BlockOptions is InterfaceOptions

    BlockOptionConstants constants

    constant number DEFAULT_BORDER_THICKNESS = 1
    constant number DEFAULT_CORNER_ROUNDING = 4

    on create
        SetStartingOptions()

        Iterator<text> blockKeys = constants:GetBlockKeys()
        repeat while blockKeys:HasNext()
            SetDefaultBlockOptions(blockKeys:Next())
        end
    end

    action SetDefaultBlockOptions(text key)
        SetBorderThickness(key, DEFAULT_BORDER_THICKNESS)
        SetTopLeftPixelRounding(key, DEFAULT_CORNER_ROUNDING)
        SetTopRightPixelRounding(key, DEFAULT_CORNER_ROUNDING)
        SetBottomLeftPixelRounding(key, DEFAULT_CORNER_ROUNDING)
        SetBottomRightPixelRounding(key, DEFAULT_CORNER_ROUNDING)
    end

    /*
    This action is called when the BlockOptions is initialized. Inheriting
    classes should set the properties of blocks here.

    It isn't necessary to set any values handled in SetDefaultBlockOptions in
    this action. When the class initializes, after SetStartingProperties is 
    called, SetDefaultBlockOptions is called on each of the block keys found
    in BlockOptionConstants.
    */
    blueprint action SetStartingOptions

    // Beginning of generated helper functions for properties.

    action SetEditBackgroundColor(ColorGroup value)
        SetColorProperty(constants:EDIT_BACKGROUND_COLOR, value)
    end

    action GetEditBackgroundColor returns ColorGroup
        return GetColorProperty(constants:EDIT_BACKGROUND_COLOR)
    end

    action SetEditBackgroundColor(text controlType, ColorGroup value)
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            InterfaceOptions newPalette
            palette = newPalette
            SetInterfaceOptions(controlType, palette)
        end
        palette:SetColorProperty(constants:EDIT_BACKGROUND_COLOR, value)
    end

    action GetEditBackgroundColor(text controlType) returns ColorGroup
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            return undefined
        else
            return palette:GetColorProperty(constants:EDIT_BACKGROUND_COLOR)
        end
    end

    action SetEditBorderColor(ColorGroup value)
        SetColorProperty(constants:EDIT_BORDER_COLOR, value)
    end

    action GetEditBorderColor returns ColorGroup
        return GetColorProperty(constants:EDIT_BORDER_COLOR)
    end

    action SetEditBorderColor(text controlType, ColorGroup value)
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            InterfaceOptions newPalette
            palette = newPalette
            SetInterfaceOptions(controlType, palette)
        end
        palette:SetColorProperty(constants:EDIT_BORDER_COLOR, value)
    end

    action GetEditBorderColor(text controlType) returns ColorGroup
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            return undefined
        else
            return palette:GetColorProperty(constants:EDIT_BORDER_COLOR)
        end
    end

    action SetEditFontColor(ColorGroup value)
        SetColorProperty(constants:EDIT_FONT_COLOR, value)
    end

    action GetEditFontColor returns ColorGroup
        return GetColorProperty(constants:EDIT_FONT_COLOR)
    end

    action SetEditFontColor(text controlType, ColorGroup value)
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            InterfaceOptions newPalette
            palette = newPalette
            SetInterfaceOptions(controlType, palette)
        end
        palette:SetColorProperty(constants:EDIT_FONT_COLOR, value)
    end

    action GetEditFontColor(text controlType) returns ColorGroup
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            return undefined
        else
            return palette:GetColorProperty(constants:EDIT_FONT_COLOR)
        end
    end

    action SetEditMouseOverColor(ColorGroup value)
        SetColorProperty(constants:EDIT_MOUSE_OVER_COLOR, value)
    end

    action GetEditMouseOverColor returns ColorGroup
        return GetColorProperty(constants:EDIT_MOUSE_OVER_COLOR)
    end

    action SetEditMouseOverColor(text controlType, ColorGroup value)
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            InterfaceOptions newPalette
            palette = newPalette
            SetInterfaceOptions(controlType, palette)
        end
        palette:SetColorProperty(constants:EDIT_MOUSE_OVER_COLOR, value)
    end

    action GetEditMouseOverColor(text controlType) returns ColorGroup
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            return undefined
        else
            return palette:GetColorProperty(constants:EDIT_MOUSE_OVER_COLOR)
        end
    end

    action SetEditMouseOverBorderColor(ColorGroup value)
        SetColorProperty(constants:EDIT_MOUSE_OVER_BORDER_COLOR, value)
    end

    action GetEditMouseOverBorderColor returns ColorGroup
        return GetColorProperty(constants:EDIT_MOUSE_OVER_BORDER_COLOR)
    end

    action SetEditMouseOverBorderColor(text controlType, ColorGroup value)
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            InterfaceOptions newPalette
            palette = newPalette
            SetInterfaceOptions(controlType, palette)
        end
        palette:SetColorProperty(constants:EDIT_MOUSE_OVER_BORDER_COLOR, value)
    end

    action GetEditMouseOverBorderColor(text controlType) returns ColorGroup
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            return undefined
        else
            return palette:GetColorProperty(constants:EDIT_MOUSE_OVER_BORDER_COLOR)
        end
    end

    action SetStaticFontColor(ColorGroup value)
        SetColorProperty(constants:STATIC_FONT_COLOR, value)
    end

    action GetStaticFontColor returns ColorGroup
        return GetColorProperty(constants:STATIC_FONT_COLOR)
    end

    action SetStaticFontColor(text controlType, ColorGroup value)
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            InterfaceOptions newPalette
            palette = newPalette
            SetInterfaceOptions(controlType, palette)
        end
        palette:SetColorProperty(constants:STATIC_FONT_COLOR, value)
    end

    action GetStaticFontColor(text controlType) returns ColorGroup
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            return undefined
        else
            return palette:GetColorProperty(constants:STATIC_FONT_COLOR)
        end
    end

    action SetStaticFontOutlineColor(ColorGroup value)
        SetColorProperty(constants:STATIC_FONT_OUTLINE_COLOR, value)
    end

    action GetStaticFontOutlineColor returns ColorGroup
        return GetColorProperty(constants:STATIC_FONT_OUTLINE_COLOR)
    end

    action SetStaticFontOutlineColor(text controlType, ColorGroup value)
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            InterfaceOptions newPalette
            palette = newPalette
            SetInterfaceOptions(controlType, palette)
        end
        palette:SetColorProperty(constants:STATIC_FONT_OUTLINE_COLOR, value)
    end

    action GetStaticFontOutlineColor(text controlType) returns ColorGroup
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            return undefined
        else
            return palette:GetColorProperty(constants:STATIC_FONT_OUTLINE_COLOR)
        end
    end

    action SetPrimaryErrorColor(ColorGroup value)
        SetColorProperty(constants:PRIMARY_ERROR_COLOR, value)
    end

    action GetPrimaryErrorColor returns ColorGroup
        return GetColorProperty(constants:PRIMARY_ERROR_COLOR)
    end

    action SetPrimaryErrorColor(text controlType, ColorGroup value)
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            InterfaceOptions newPalette
            palette = newPalette
            SetInterfaceOptions(controlType, palette)
        end
        palette:SetColorProperty(constants:PRIMARY_ERROR_COLOR, value)
    end

    action GetPrimaryErrorColor(text controlType) returns ColorGroup
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            return undefined
        else
            return palette:GetColorProperty(constants:PRIMARY_ERROR_COLOR)
        end
    end

    action SetSecondaryErrorColor(ColorGroup value)
        SetColorProperty(constants:SECONDARY_ERROR_COLOR, value)
    end

    action GetSecondaryErrorColor returns ColorGroup
        return GetColorProperty(constants:SECONDARY_ERROR_COLOR)
    end

    action SetSecondaryErrorColor(text controlType, ColorGroup value)
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            InterfaceOptions newPalette
            palette = newPalette
            SetInterfaceOptions(controlType, palette)
        end
        palette:SetColorProperty(constants:SECONDARY_ERROR_COLOR, value)
    end

    action GetSecondaryErrorColor(text controlType) returns ColorGroup
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            return undefined
        else
            return palette:GetColorProperty(constants:SECONDARY_ERROR_COLOR)
        end
    end

    action SetHintBorderColor(ColorGroup value)
        SetColorProperty(constants:HINT_BORDER_COLOR, value)
    end

    action GetHintBorderColor returns ColorGroup
        return GetColorProperty(constants:HINT_BORDER_COLOR)
    end

    action SetHintBorderColor(text controlType, ColorGroup value)
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            InterfaceOptions newPalette
            palette = newPalette
            SetInterfaceOptions(controlType, palette)
        end
        palette:SetColorProperty(constants:HINT_BORDER_COLOR, value)
    end

    action GetHintBorderColor(text controlType) returns ColorGroup
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            return undefined
        else
            return palette:GetColorProperty(constants:HINT_BORDER_COLOR)
        end
    end

    action SetDetailFontColor(ColorGroup value)
        SetColorProperty(constants:DETAIL_FONT_COLOR, value)
    end

    action GetDetailFontColor returns ColorGroup
        return GetColorProperty(constants:DETAIL_FONT_COLOR)
    end

    action SetDetailFontColor(text controlType, ColorGroup value)
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            InterfaceOptions newPalette
            palette = newPalette
            SetInterfaceOptions(controlType, palette)
        end
        palette:SetColorProperty(constants:DETAIL_FONT_COLOR, value)
    end

    action GetDetailFontColor(text controlType) returns ColorGroup
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            return undefined
        else
            return palette:GetColorProperty(constants:DETAIL_FONT_COLOR)
        end
    end

    action SetMovingBackgroundColor(ColorGroup value)
        SetColorProperty(constants:MOVING_BACKGROUND_COLOR, value)
    end

    action GetMovingBackgroundColor returns ColorGroup
        return GetColorProperty(constants:MOVING_BACKGROUND_COLOR)
    end

    action SetMovingBackgroundColor(text controlType, ColorGroup value)
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            InterfaceOptions newPalette
            palette = newPalette
            SetInterfaceOptions(controlType, palette)
        end
        palette:SetColorProperty(constants:MOVING_BACKGROUND_COLOR, value)
    end

    action GetMovingBackgroundColor(text controlType) returns ColorGroup
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            return undefined
        else
            return palette:GetColorProperty(constants:MOVING_BACKGROUND_COLOR)
        end
    end

    action SetPlaceholderBackgroundColor(ColorGroup value)
        SetColorProperty(constants:PLACEHOLDER_BACKGROUND_COLOR, value)
    end

    action GetPlaceholderBackgroundColor returns ColorGroup
        return GetColorProperty(constants:PLACEHOLDER_BACKGROUND_COLOR)
    end

    action SetPlaceholderBackgroundColor(text controlType, ColorGroup value)
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            InterfaceOptions newPalette
            palette = newPalette
            SetInterfaceOptions(controlType, palette)
        end
        palette:SetColorProperty(constants:PLACEHOLDER_BACKGROUND_COLOR, value)
    end

    action GetPlaceholderBackgroundColor(text controlType) returns ColorGroup
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            return undefined
        else
            return palette:GetColorProperty(constants:PLACEHOLDER_BACKGROUND_COLOR)
        end
    end

    action SetEditBorderThickness(number value)
        SetNumberProperty(constants:EDIT_BORDER_THICKNESS, value)
    end

    action GetEditBorderThickness returns number
        return GetNumberProperty(constants:EDIT_BORDER_THICKNESS)
    end

    action HasEditBorderThickness returns boolean
        return GetNumberProperty(constants:EDIT_BORDER_THICKNESS):IsNotANumber() = false
    end

    action SetEditBorderThickness(text controlType, number value)
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            InterfaceOptions newPalette
            palette = newPalette
            SetInterfaceOptions(controlType, palette)
        end
        palette:SetNumberProperty(constants:EDIT_BORDER_THICKNESS, value)
    end

    action GetEditBorderThickness(text controlType) returns number
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            return parent:InterfaceOptions:NOT_A_NUMBER
        else
            return palette:GetNumberProperty(constants:EDIT_BORDER_THICKNESS)
        end
    end

    action HasEditBorderThickness(text controlType) returns boolean
        return GetEditBorderThickness(controlType):IsNotANumber() = false
    end

    action SetEditMouseOverBorderThickness(number value)
        SetNumberProperty(constants:EDIT_MOUSE_OVER_BORDER_THICKNESS, value)
    end

    action GetEditMouseOverBorderThickness returns number
        return GetNumberProperty(constants:EDIT_MOUSE_OVER_BORDER_THICKNESS)
    end

    action HasEditMouseOverBorderThickness returns boolean
        return GetNumberProperty(constants:EDIT_MOUSE_OVER_BORDER_THICKNESS):IsNotANumber() = false
    end

    action SetEditMouseOverBorderThickness(text controlType, number value)
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            InterfaceOptions newPalette
            palette = newPalette
            SetInterfaceOptions(controlType, palette)
        end
        palette:SetNumberProperty(constants:EDIT_MOUSE_OVER_BORDER_THICKNESS, value)
    end

    action GetEditMouseOverBorderThickness(text controlType) returns number
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            return parent:InterfaceOptions:NOT_A_NUMBER
        else
            return palette:GetNumberProperty(constants:EDIT_MOUSE_OVER_BORDER_THICKNESS)
        end
    end

    action HasEditMouseOverBorderThickness(text controlType) returns boolean
        return GetEditMouseOverBorderThickness(controlType):IsNotANumber() = false
    end

    action SetEditFontSize(number value)
        SetNumberProperty(constants:EDIT_FONT_SIZE, value)
    end

    action GetEditFontSize returns number
        return GetNumberProperty(constants:EDIT_FONT_SIZE)
    end

    action HasEditFontSize returns boolean
        return GetNumberProperty(constants:EDIT_FONT_SIZE):IsNotANumber() = false
    end

    action SetEditFontSize(text controlType, number value)
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            InterfaceOptions newPalette
            palette = newPalette
            SetInterfaceOptions(controlType, palette)
        end
        palette:SetNumberProperty(constants:EDIT_FONT_SIZE, value)
    end

    action GetEditFontSize(text controlType) returns number
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            return parent:InterfaceOptions:NOT_A_NUMBER
        else
            return palette:GetNumberProperty(constants:EDIT_FONT_SIZE)
        end
    end

    action HasEditFontSize(text controlType) returns boolean
        return GetEditFontSize(controlType):IsNotANumber() = false
    end

    action SetStaticFontSize(number value)
        SetNumberProperty(constants:STATIC_FONT_SIZE, value)
    end

    action GetStaticFontSize returns number
        return GetNumberProperty(constants:STATIC_FONT_SIZE)
    end

    action HasStaticFontSize returns boolean
        return GetNumberProperty(constants:STATIC_FONT_SIZE):IsNotANumber() = false
    end

    action SetStaticFontSize(text controlType, number value)
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            InterfaceOptions newPalette
            palette = newPalette
            SetInterfaceOptions(controlType, palette)
        end
        palette:SetNumberProperty(constants:STATIC_FONT_SIZE, value)
    end

    action GetStaticFontSize(text controlType) returns number
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            return parent:InterfaceOptions:NOT_A_NUMBER
        else
            return palette:GetNumberProperty(constants:STATIC_FONT_SIZE)
        end
    end

    action HasStaticFontSize(text controlType) returns boolean
        return GetStaticFontSize(controlType):IsNotANumber() = false
    end

    action SetStaticFontOutlineThickness(number value)
        SetNumberProperty(constants:STATIC_FONT_OUTLINE_THICKNESS, value)
    end

    action GetStaticFontOutlineThickness returns number
        return GetNumberProperty(constants:STATIC_FONT_OUTLINE_THICKNESS)
    end

    action HasStaticFontOutlineThickness returns boolean
        return GetNumberProperty(constants:STATIC_FONT_OUTLINE_THICKNESS):IsNotANumber() = false
    end

    action SetStaticFontOutlineThickness(text controlType, number value)
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            InterfaceOptions newPalette
            palette = newPalette
            SetInterfaceOptions(controlType, palette)
        end
        palette:SetNumberProperty(constants:STATIC_FONT_OUTLINE_THICKNESS, value)
    end

    action GetStaticFontOutlineThickness(text controlType) returns number
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            return parent:InterfaceOptions:NOT_A_NUMBER
        else
            return palette:GetNumberProperty(constants:STATIC_FONT_OUTLINE_THICKNESS)
        end
    end

    action HasStaticFontOutlineThickness(text controlType) returns boolean
        return GetStaticFontOutlineThickness(controlType):IsNotANumber() = false
    end

    action SetHintBorderThickness(number value)
        SetNumberProperty(constants:HINT_BORDER_THICKNESS, value)
    end

    action GetHintBorderThickness returns number
        return GetNumberProperty(constants:HINT_BORDER_THICKNESS)
    end

    action HasHintBorderThickness returns boolean
        return GetNumberProperty(constants:HINT_BORDER_THICKNESS):IsNotANumber() = false
    end

    action SetHintBorderThickness(text controlType, number value)
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            InterfaceOptions newPalette
            palette = newPalette
            SetInterfaceOptions(controlType, palette)
        end
        palette:SetNumberProperty(constants:HINT_BORDER_THICKNESS, value)
    end

    action GetHintBorderThickness(text controlType) returns number
        InterfaceOptions palette = GetInterfaceOptions(controlType)
        if palette = undefined
            return parent:InterfaceOptions:NOT_A_NUMBER
        else
            return palette:GetNumberProperty(constants:HINT_BORDER_THICKNESS)
        end
    end

    action HasHintBorderThickness(text controlType) returns boolean
        return GetHintBorderThickness(controlType):IsNotANumber() = false
    end

end