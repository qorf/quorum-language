package Libraries.Language.Compile.Documentation

use Libraries.Web.Page.NavigationDivision
use Libraries.Web.Page.UnorderedList
use Libraries.Web.Page.ListItem
use Libraries.Web.Page.Link
use Libraries.Web.Page.Image
use Libraries.Web.Page.Division
use Libraries.Web.Page.Form
use Libraries.Web.Page.Input
use Libraries.Web.Page.Button
use Libraries.Web.Page.Heading
use Libraries.Web.Page.FieldSet
use Libraries.Web.Page.Label
use Libraries.Web.Page.Label
use Libraries.Web.Page.LineBreak
use Libraries.Web.Page.Span
use Libraries.Web.Page.Bold
use Libraries.Web.Page.Script
use Libraries.Web.Page.Paragraph
use Libraries.Web.Page.Header
use Libraries.System.File
use Libraries.Language.Compile.Symbol.SymbolTable

class NavigationBar is NavigationDivision
    constant text extension = ".html"
    LineBreak break
    UnorderedList listBurger = undefined
    on create
        Setup()
    end

    action Setup
        Division div1
        div1:SetIdentifier("navbar")
        div1:AddClassAttribute("bg-neutral-grey-95 text-neutral-white items-center justify-between w-full flex flex-col sm:static sm:text-sm sm:flex-row")
        Add(div1)
        Division div2
        div2:SetIdentifier("inner-navbar")
        div2:AddClassAttribute("flex items-center w-full justify-between min-h-[100px] h-full py-3 sm:py-5 sm:block sm:min-h-fit")
        div1:Add(div2)
        
        Link quorumHomeLink
        quorumHomeLink:SetAddress("/")
        quorumHomeLink:SetClassAttribute("flex flex-row gap-3")
        Image quorumIcon
        quorumIcon:SetAlternate("Quorum Icon")
        quorumIcon:SetAddress("/media/userInterface/SVG/Quorum Logo.svg")
        quorumIcon:SetWidth("30")
        quorumIcon:SetHeight("30")
        Span quorumTitle
        quorumTitle:SetTitle("Quroum")
        quorumTitle:AddText("Quorum")
        quorumTitle:SetIdentifier("quorum-nav-title")
        quorumTitle:SetClassAttribute("text-neutral-white font-bold text-lg block sm:hidden md:block")
        quorumHomeLink:Add(quorumIcon)
        quorumHomeLink:Add(quorumTitle)
        div2:Add(quorumHomeLink)

        text hamburger = "<svg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'>
<g clip-path='url(#clip0_739_1636)'>
<path d='M4 18H20C20.55 18 21 17.55 21 17C21 16.45 20.55 16 20 16H4C3.45 16 3 16.45 3 17C3 17.55 3.45 18 4 18ZM4 13H20C20.55 13 21 12.55 21 12C21 11.45 20.55 11 20 11H4C3.45 11 3 11.45 3 12C3 12.55 3.45 13 4 13ZM3 7C3 7.55 3.45 8 4 8H20C20.55 8 21 7.55 21 7C21 6.45 20.55 6 20 6H4C3.45 6 3 6.45 3 7Z' fill='#F6F6F7'/>
</g>
<defs>
<clipPath id='clip0_739_1636'>
<rect width='24' height='24' fill='white'/>
</clipPath>
</defs>
</svg>
"
        text carrot = "<svg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'>
<g clip-path='url(#clip0_735_6972)'>
<path d='M8.6998 17.2998C8.51647 17.1165 8.4248 16.8831 8.4248 16.5998C8.4248 16.3165 8.51647 16.0831 8.6998 15.8998L12.5998 11.9998L8.6998 8.0998C8.51647 7.91647 8.4248 7.68314 8.4248 7.3998C8.4248 7.11647 8.51647 6.88314 8.6998 6.6998C8.88314 6.51647 9.11647 6.4248 9.3998 6.4248C9.68314 6.4248 9.91647 6.51647 10.0998 6.6998L14.6998 11.2998C14.7998 11.3998 14.8708 11.5081 14.9128 11.6248C14.9541 11.7415 14.9748 11.8665 14.9748 11.9998C14.9748 12.1331 14.9541 12.2581 14.9128 12.3748C14.8708 12.4915 14.7998 12.5998 14.6998 12.6998L10.0998 17.2998C9.91647 17.4831 9.68314 17.5748 9.3998 17.5748C9.11647 17.5748 8.88314 17.4831 8.6998 17.2998Z' fill='#F6F6F7'/>
</g>
<defs>
<clipPath id='clip0_735_6972'>
<rect width='24' height='24' fill='white'/>
</clipPath>
</defs>
</svg>"

        Division div3
        div3:SetIdentifier("mobile-nav-container")
        div3:SetClassAttribute("flex flex-row items-center gap-x-5 sm:hidden")
        div3:SetStyle("column-gap: 20px;")
        Button menuButton
        menuButton:SetIdentifier("menu-button")
        menuButton:SetTitle("open menu")
        menuButton:AddText(hamburger)
        div3:Add(menuButton)
        
        div2:Add(div3)

        Division div_menuList
        div_menuList:SetIdentifier("menu-list")
        div_menuList:SetClassAttribute("flex-1 flex justify-center w-full bg-neutral-grey-65 hidden items-start sm:pb-0 sm:mt-0 sm:block sm:items-center sm:w-full sm:bg-neutral-grey-95 sm:block sm:justify-end")
        UnorderedList ul
listBurger = ul
        ul:SetIdentifier("navigation-items")
        ul:AddClassAttribute("w-4/5 justify-center items-center sm:flex sm:space-x-6 sm:space-y-0 sm:font-medium sm:w-full pr-2 sm:pr-4")
        
        Link learnLink
        ListItem li1
        learnLink:SetAddress("/learn" + extension)
        learnLink:AddText("Learn")
        learnLink:SetIdentifier("learnNavLink")
        learnLink:AddClassAttribute("w-full py-3 block sm:w-fit text-base") 
        li1:Add(learnLink)
        
        Span rightArrow
        rightArrow:AddText(carrot)  // or use an SVG/icon of your choice
        rightArrow:AddClassAttribute("hidden mr-3 group-hover:inline-block sm:group-hover:hidden")  // hide by default and show on group hover
        li1:Add(rightArrow)  // Add the arrow to the list item
        
        li1:AddClassAttribute("h-full group flex items-center flex-row rounded-2xl pl-3 duration-150 hover:bg-neutral-grey-40 sm:w-fit sm:hover:bg-neutral-grey-95 relative")  // Make sure the li has a 'relative' class for positioning if using an SVG or icon
        ul:Add(li1)
        
        Link refLink
        ListItem li2
        refLink:SetAddress("/reference" + extension)
        refLink:AddText("Reference")
        refLink:SetIdentifier("refNavLink")
        refLink:AddClassAttribute("w-full py-3 block sm:w-fit group text-base") 
        li2:Add(refLink)
        
        Span rightArrow2
        rightArrow2:AddText(carrot)
        rightArrow2:AddClassAttribute("hidden mr-3 group-hover:inline-block sm:group-hover:hidden")
        li2:Add(rightArrow2)  // Add the arrow to the list item
        
        li2:AddClassAttribute("h-full group flex items-center flex-row rounded-2xl pl-3 duration-150 hover:bg-neutral-grey-40 sm:w-fit sm:hover:bg-neutral-grey-95 relative")
        ul:Add(li2)
        
        Link libLink
        ListItem li3
        libLink:SetAddress("/libraries" + extension)
        libLink:AddText("Libraries")
        libLink:SetIdentifier("libNavLink")
        libLink:AddClassAttribute("w-full py-3 block sm:w-fit group text-base")
        li3:Add(libLink)
        
        Span rightArrow3
        rightArrow3:AddText(carrot)
        rightArrow3:AddClassAttribute("hidden mr-3 group-hover:inline-block sm:group-hover:hidden")
        li3:Add(rightArrow3)  // Add the arrow to the list item
        
        li3:AddClassAttribute("h-full group flex items-center flex-row rounded-2xl pl-3 duration-150 hover:bg-neutral-grey-40 sm:w-fit sm:hover:bg-neutral-grey-95 relative")
        ul:Add(li3)
        
        Link communityLink
        ListItem li4
        communityLink:SetAddress("/community" + extension)
        communityLink:AddText("Community")
        communityLink:AddAttribute("data-test", "communityNavLink")
        communityLink:SetIdentifier("communityNavLink")
        communityLink:AddClassAttribute("w-full py-3 block sm:w-fit group text-base")  
        li4:Add(communityLink)
        
        Span rightArrow4
        rightArrow4:AddText(carrot)
        rightArrow4:AddClassAttribute("hidden mr-3 group-hover:inline-block sm:group-hover:hidden")
        li4:Add(rightArrow4)  // Add the arrow to the list item
        
        li4:AddClassAttribute("h-full group flex items-center flex-row rounded-2xl pl-3 duration-150 hover:bg-neutral-grey-40 sm:w-fit sm:hover:bg-neutral-grey-95 relative")
        ul:Add(li4)


        ListItem profileButton
        Link profileLink
        profileLink:SetAddress("Profile.quorum")
        profileLink:AddText("Projects")
        profileLink:AddAttribute("data-test", "communityNavLink")
        profileLink:SetIdentifier("profileButton")
        profileLink:AddClassAttribute("w-full py-3 block sm:w-fit group text-base")  
        profileButton:Add(profileLink)
        
        Span rightArrowProfile
        rightArrow4:AddText(carrot)
        rightArrow4:AddClassAttribute("hidden mr-3 group-hover:inline-block sm:group-hover:hidden")
        profileButton:Add(rightArrowProfile)  // Add the arrow to the list item

        profileButton:AddClassAttribute("h-full group hidden items-center flex-row rounded-2xl pl-3 duration-150 hover:bg-neutral-grey-40 sm:w-fit sm:hover:bg-neutral-grey-95 relative")
        ul:Add(profileButton)

        ListItem li5
                //opens the modal created in SourceCode/Support/LoginForm.quorum
        Button loginButton
        loginButton:SetIdentifier("loginButton")
        loginButton:AddAttribute("data-test", "loginNavLink")
        loginButton:AddText("Login")
        loginButton:SetIdentifier("loginButton")
        loginButton:SetOnClick("loginButtonPressed()")
        loginButton:AddClassAttribute("w-full py-3 block sm:w-fit group text-left sm:text-center text-base")  
        li5:Add(loginButton)
        
        Span rightArrow5
        rightArrow5:AddText(carrot)
        rightArrow5:AddClassAttribute("hidden mr-3 group-hover:inline-block sm:group-hover:hidden")
        li5:Add(rightArrow5)  // Add the arrow to the list item
        
        li5:AddClassAttribute("h-full group flex items-center flex-row rounded-2xl pl-3 duration-150 hover:bg-neutral-grey-40 sm:w-fit sm:hover:bg-neutral-grey-95 relative")
        ul:Add(li5)

 // Search ListItem and its children
        ListItem li6
        li6:AddClassAttribute("w-full h-full duration-150 sm:w-fit")
        li6:SetIdentifier("searchListItem")
        Division searchContainer
        searchContainer:SetIdentifier("search-container")
        searchContainer:AddClassAttribute("relative hidden items-center my-4 bg-neutral-grey-65 rounded-2xl w-64") // Add order-[2]

        Span searchIcon
        text searchIconText = "<svg width='18' height='18' viewBox='0 0 18 18' fill='none' xmlns='http://www.w3.org/2000/svg'>
<path d='M15.9 17.3L10.3 11.7C9.8 12.1 9.225 12.4167 8.575 12.65C7.925 12.8833 7.23333 13 6.5 13C4.68333 13 3.146 12.371 1.888 11.113C0.629333 9.85433 0 8.31667 0 6.5C0 4.68333 0.629333 3.14567 1.888 1.887C3.146 0.629 4.68333 0 6.5 0C8.31667 0 9.85433 0.629 11.113 1.887C12.371 3.14567 13 4.68333 13 6.5C13 7.23333 12.8833 7.925 12.65 8.575C12.4167 9.225 12.1 9.8 11.7 10.3L17.325 15.925C17.5083 16.1083 17.6 16.3333 17.6 16.6C17.6 16.8667 17.5 17.1 17.3 17.3C17.1167 17.4833 16.8833 17.575 16.6 17.575C16.3167 17.575 16.0833 17.4833 15.9 17.3ZM6.5 11C7.75 11 8.81267 10.5627 9.688 9.688C10.5627 8.81267 11 7.75 11 6.5C11 5.25 10.5627 4.18733 9.688 3.312C8.81267 2.43733 7.75 2 6.5 2C5.25 2 4.18733 2.43733 3.312 3.312C2.43733 4.18733 2 5.25 2 6.5C2 7.75 2.43733 8.81267 3.312 9.688C4.18733 10.5627 5.25 11 6.5 11Z' fill='#F6F6F7'/>
</svg>"

        searchIcon:AddText(searchIconText)
        searchIcon:AddClassAttribute("absolute inset-y-0 left-0 pl-3 flex items-center")
        
        Form form
        form:SetFormAction("/Search.quorum")
        form:AddAttribute("role", "search")
        form:SetPost(true)

        Input searchInput
        searchInput:SetType("text")
        searchInput:SetIdentifier("nav-search")
        searchInput:AddClassAttribute("rounded-2xl py-2 pl-10 pr-10 w-full bg-neutral-grey-65 text-neutral-white focus:ring-0 focus:border-transparent")
        searchInput:SetPlaceHolder("Search `Hotkeys`")
        searchInput:SetName("search-query")

        Label searchLabel
        searchLabel:SetIdentifier("search-label")
        searchLabel:AddText("Search Quorum Documentation")
        searchLabel:AddClassAttribute("sr-only")
        searchLabel:AddAttribute("for", "nav-search")
        form:Add(searchLabel)
        
        form:Add(searchInput)

        Button closeButton
        closeButton:SetIdentifier("close-button")
        closeButton:AddClassAttribute("absolute inset-y-0 right-0 pr-3 flex items-center")
        closeButton:SetTitle("Close")
        closeButton:AddText("X")
        searchContainer:Add(searchIcon)
        searchContainer:Add(form)
        searchContainer:Add(closeButton)
        li6:Add(searchContainer)

        closeButton:AddAttribute("aria-label", "Close Search Form")
        
        // Search Button
        Button searchButton
        searchButton:SetIdentifier("search-button")
        searchButton:AddClassAttribute("w-fit h-full block")
        searchButton:AddAttribute("data-test", "searchNavLink")
        searchButton:AddText(searchIconText)
        searchButton:AddAttribute("aria-label", "Open Search Form")
        li6:Add(searchButton)

        ul:Add(li6)

        Span discordIconSVG

        text discordIconText = "<svg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'>
<path d='M20.3303 4.22781C18.7767 3.50093 17.1156 2.97267 15.3789 2.67188C15.1656 3.05749 14.9164 3.57614 14.7446 3.98873C12.8985 3.71109 11.0693 3.71109 9.25716 3.98873C9.08539 3.57614 8.83055 3.05749 8.61536 2.67188C6.87681 2.97267 5.21376 3.50287 3.66019 4.23166C0.526643 8.96686 -0.322811 13.5845 0.101917 18.1365C2.18025 19.6885 4.19441 20.6313 6.17457 21.2483C6.66349 20.5754 7.09953 19.8601 7.47518 19.1063C6.75975 18.8344 6.07453 18.499 5.42707 18.1095C5.59884 17.9822 5.76686 17.8492 5.92918 17.7123C9.87819 19.5594 14.1689 19.5594 18.0707 17.7123C18.235 17.8492 18.403 17.9822 18.5728 18.1095C17.9235 18.5009 17.2364 18.8363 16.521 19.1082C16.8966 19.8601 17.3308 20.5774 17.8216 21.2502C19.8036 20.6333 21.8197 19.6905 23.898 18.1365C24.3964 12.8595 23.0467 8.28434 20.3303 4.22781ZM8.01318 15.337C6.82772 15.337 5.85555 14.2303 5.85555 12.8826C5.85555 11.535 6.80696 10.4264 8.01318 10.4264C9.21942 10.4264 10.1916 11.533 10.1708 12.8826C10.1727 14.2303 9.21942 15.337 8.01318 15.337ZM15.9867 15.337C14.8013 15.337 13.8291 14.2303 13.8291 12.8826C13.8291 11.535 14.7805 10.4264 15.9867 10.4264C17.193 10.4264 18.1651 11.533 18.1444 12.8826C18.1444 14.2303 17.193 15.337 15.9867 15.337Z'
fill='#F6F6F7'/>
</svg>"
        discordIconSVG:AddText(discordIconText)
        discordIconSVG:AddClassAttribute("inset-y-0 left-0 pl-3 flex items-center")

        Image discordIcon
        discordIcon:SetAddress("/media/userInterface/quorumAssets/discord-icon 1.png")
        //discordIcon:AddClassAttribute("inset-y-0 left-0 flex items-center")
        discordIcon:SetWidth("24")
        discordIcon:SetHeight("24")
        discordIcon:SetAlternate("Discord Icon that links to the community Server")

        Link discordLink
        ListItem li8
        discordLink:SetAddress("https://discord.gg/6yTVQq4")
        discordLink:Add(discordIconSVG)
        discordLink:AddText(" ")
        discordLink:AddAttribute("data-test", "discordNavLink")
        discordLink:AddAttribute("aria-label", "Join the Discord Server")
        discordLink:SetIdentifier("discordNavLink")
        discordLink:AddClassAttribute("w-full py-3 block sm:w-fit group text-base")  
        li8:Add(discordLink)

        li8:AddClassAttribute("h-full group flex items-center flex-row rounded-2xl duration-150 hover:bg-neutral-grey-40 sm:w-fit sm:hover:bg-neutral-grey-95 relative")
        ul:Add(li8)
        

        Link downloadLink
        ListItem li7
        li7:SetIdentifier("")
        downloadLink:SetAddress("/download" + extension)
        downloadLink:AddText("Download")
        downloadLink:SetIdentifier("downloadNavLink")
        downloadLink:AddClassAttribute("h-full py-2 block w-full group font-normal sm:font-bold px-0 sm:px-2")  // Add 'group' here
        li7:Add(downloadLink)
        
        Span rightArrow7
        rightArrow7:AddText(carrot)
        rightArrow7:AddClassAttribute("hidden mr-3 group-hover:inline-block sm:group-hover:hidden")
        li7:Add(rightArrow7)  // Add the arrow to the list item
        
        li7:AddClassAttribute("h-full group flex items-center flex-row rounded-2xl pl-3 hover:bg-neutral-grey-40 sm:px-4 sm:duration-150 sm:text-center sm:rounded-3xl sm:font-medium sm:text-sm sm:text-neutral-black sm:bg-quorum-blue-100 sm:inline relative")  // Added 'relative' for positioning
        ul:Add(li7)

        div_menuList:Add(ul)        
        div1:Add(div_menuList)
        
        Script script
        script:SetCode("
            document.addEventListener(`DOMContentLoaded`, function() {
                  const menuButton = document.getElementById(`menu-button`);
                  const menuList = document.getElementById(`menu-list`);
                  const navbar = document.getElementById(`navbar`);
                  const searchButton = document.getElementById(`search-button`);
                  const searchContainer = document.getElementById(`search-container`);
                  const closeButton = document.getElementById(`close-button`);
                  const searchInput = document.getElementById(`nav-search`);
                  const innerNavbar = document.getElementById(`inner-navbar`)
                  
                  const learnLink = document.getElementById(`learnNavLink`);
                  const refLink = document.getElementById(`refNavLink`);
                  const libLink = document.getElementById(`libNavLink`);
                  const communityLink = document.getElementById(`communityNavLink`);
                  const searchListItem = document.getElementById(`searchListItem`)
                  const loginListItem = document.getElementById(`loginButton`)
                  const downloadLink = document.getElementById(`downloadNavLink`);
  
                  const mobileContainer = document.getElementById(`mobile-nav-container`)
                  const quorumTitle = document.getElementById(`quorum-nav-title`)

                  let state = false;
                  let isSearchVisible = false;
           
                  // Function to toggle menu
                   const toggleMenu = () => {
                      state = !state;
                      state ? navbar.classList.add(`z-10`) : navbar.classList.remove(`z-10`);
                      menuList.classList.toggle(`hidden`);
                    };

                    const toggleSearch = () => {
                        const smallScreenQuery = window.matchMedia('(max-width: 639px)');
                        if (searchContainer.classList.contains(`hidden`)) {
                            searchButton.classList.add(`hidden`);
                            searchContainer.classList.remove(`hidden`);
                            searchInput.focus()
                            learnLink.classList.add(`hidden`)
                            refLink.classList.add(`hidden`)
                            libLink.classList.add(`hidden`)
                            communityLink.classList.add(`hidden`)
                            loginListItem.classList.add(`hidden`)
                            
                            if (smallScreenQuery.matches) {
                                quorumTitle.classList.add(`hidden`)
                                menuButton.classList.add(`hidden`)
                                downloadLink.classList.add(`hidden`)
                            }
                        } else {
                            searchButton.classList.remove(`hidden`);
                            searchContainer.classList.add(`hidden`);
                            learnLink.classList.remove(`hidden`)
                            refLink.classList.remove(`hidden`)
                            libLink.classList.remove(`hidden`)
                            communityLink.classList.remove(`hidden`)
                            loginListItem.classList.remove(`hidden`)
                            downloadLink.classList.remove(`hidden`)
                            if (smallScreenQuery.matches) {
                                quorumTitle.classList.remove(`hidden`)
                                menuButton.classList.remove(`hidden`)
                                downloadLink.classList.remove(`hidden`)
                            }
                        }
                    }; 
                
            
                  // Add Event Listener for Menu Button
                  searchButton.addEventListener(`click`, toggleSearch);
                  closeButton.addEventListener(`click`, (e) =>{
                    e.preventDefault()    
                    toggleSearch()
                  });
                  menuButton.addEventListener(`click`, toggleMenu);

                      // Function to toggle visibility based on screen size
                    const updateVisibility = () => {
                        const smallScreenQuery = window.matchMedia('(max-width: 639px)');
                        if (smallScreenQuery.matches) {
                            mobileContainer.insertBefore(searchContainer, menuButton)
                            mobileContainer.insertBefore(searchButton, menuButton)
                            // Smaller than 640px
                            learnLink.classList.remove('hidden');
                            refLink.classList.remove('hidden');
                            libLink.classList.remove('hidden');
                            communityLink.classList.remove('hidden');
                            loginListItem.classList.remove(`hidden`)
                            downloadLink.classList.remove(`hidden`)
                        } else{
                            searchListItem.appendChild(searchContainer)
                            searchListItem.appendChild(searchButton)
                        }   
                    };
                
                let placeholders = [`Search \`Button\``, `Search \`Behavior\``, `Search \`Hotkeys\``];
                let currentIndex = 0;
                
                function cyclePlaceholder() {
                    let searchInput = document.getElementById(`nav-search`);
                    if (searchInput) {
                        searchInput.placeholder = placeholders[currentIndex];
                        currentIndex = (currentIndex + 1) % placeholders.length;
                    }
                }
    
                  // Execute once at the start
                    updateVisibility();
                
                    // Execute whenever the window is resized
                    window.addEventListener('resize', updateVisibility);
                });
            ")
        div1:Add(script)
        AddLoginForm()
    end

    action AddMobilePackages(SymbolTable table)
        
    end

    private action AddLoginForm
        Division loginDiv

        loginDiv:SetIdentifier("loginModal")
        loginDiv:AddAttribute("role", "dialog")
        loginDiv:AddAttribute("aria-labelledby", "loginTitleDiv")
loginDiv:AddClassAttribute("hidden")

        Division modalDialog
        modalDialog:SetClassAttribute("modal-dialog modal-content animate")

        Division loginTitleDiv
        loginTitleDiv:SetClassAttribute("logintitle")
        loginTitleDiv:SetIdentifier("loginTitleDiv")
        loginTitleDiv:AddText("Quorum Login")
        modalDialog:Add(loginTitleDiv)

        Form loginForm

        loginForm:SetClassAttribute("loginform")
        loginForm:SetIdentifier("loginmodalform")
        loginForm:AddAttribute("method", "post")

        Division fieldContainerDiv
        fieldContainerDiv:SetClassAttribute("loginFieldContainer")
        
        Division usernameDiv
        usernameDiv:SetClassAttribute("usernamediv formfielddiv")

        Label usernameLabel
        Bold usernameBold
        usernameBold:AddText("Username")
        usernameLabel:Add(usernameBold)

        //usernameDiv:Add(usernameLabel)
        
        Input userNameInput
        userNameInput:SetType("text")
        userNameInput:SetClassAttribute("LoginField")
        userNameInput:SetPlaceHolder("Username")
        userNameInput:SetName("username")
        userNameInput:SetIdentifier("usernameInput")
        userNameInput:SetRequired(true)
        
        usernameDiv:Add(userNameInput)

        fieldContainerDiv:Add(usernameDiv)

        Division passwordDiv
        passwordDiv:SetClassAttribute("passworddiv formfielddiv")


        Label passwordLabel
        Bold passwordBold
        passwordBold:AddText("Password")
        passwordLabel:Add(passwordBold)

        //passwordDiv:Add(passwordLabel)
        
        Input passwordInput
        passwordInput:SetType("password")
        passwordInput:SetClassAttribute("LoginField")
        passwordInput:SetPlaceHolder("Password")
        passwordInput:SetName("password")
        passwordInput:SetIdentifier("passwordInput")
        passwordInput:SetRequired(true)
        
        passwordDiv:Add(passwordInput)
        
        fieldContainerDiv:Add(passwordDiv)

        Division footbar
        footbar:SetClassAttribute("footbar")

        
        Button submitButton
        submitButton:SetClassAttribute("loginbtn")
        submitButton:SetType("submit")
        submitButton:AddText("Login")
        submitButton:SetTabIndex("0")
        submitButton:SetOnClick("login()")
        
//        fieldContainerDiv:Add(submitButton)

        Input rememberMeCheckbox
        rememberMeCheckbox:SetType("checkbox")
        rememberMeCheckbox:SetChecked(true)
        rememberMeCheckbox:AddText("Remember Me")

//        fieldContainerDiv:Add(rememberMeCheckbox)

        loginForm:Add(fieldContainerDiv)

        Division buttonContainerDiv
        buttonContainerDiv:SetClassAttribute("loginContainer")

        Button cancelButton
        cancelButton:SetType("button")
        cancelButton:SetOnClick("hideLoginModal()")
        cancelButton:SetClassAttribute("loginbtn")
        cancelButton:AddText("Cancel")
        cancelButton:SetTabIndex("0")

        buttonContainerDiv:Add(submitButton)
        buttonContainerDiv:Add(cancelButton)

        footbar:Add(buttonContainerDiv)

        Span forgotPasswordSpan
        forgotPasswordSpan:SetClassAttribute("psw")
        Link link
        link:SetAddress("/forgotpassword.html")
        link:AddAttribute("target", "_blank")
        link:AddAttribute("rel", "noopener noreferrer")
        link:AddText("Forgot password?")
        link:SetTabIndex("0")
        link:SetIdentifier("forgotPassword")
        forgotPasswordSpan:Add(link)
        footbar:Add(forgotPasswordSpan)

        Span registerAccountSpan
        registerAccountSpan:SetClassAttribute("psw")
        Link registerLink
        registerLink:SetAddress("/register.html")
        registerLink:AddAttribute("target", "_blank")
        registerLink:AddAttribute("rel", "noopener noreferrer")
        registerLink:AddText("Sign up for an account")
        registerLink:SetTabIndex("0")
        registerLink:SetIdentifier("registerAccountLink")
        registerAccountSpan:Add(registerLink)
        footbar:Add(registerAccountSpan)

        loginForm:Add(footbar)

        modalDialog:Add(loginForm)
        loginDiv:Add(modalDialog)

        Add(loginDiv)
        
        text dq = ""
        dq = dq:GetDoubleQuote()
    end

    private action AddSignupButtons
        //account buttons
        Button signInButton
        Button signUpButton
        signInButton:SetIdentifier("signInButton")
        signUpButton:SetIdentifier("signUpButton")
        signInButton:AddClassAttribute("navBarAccountButton")
        signUpButton:AddClassAttribute("navBarAccountButton")
        signInButton:AddText("Sign In")
        signUpButton:AddText("Sign Up")
        Add(signInButton)
        Add(signUpButton)


        //sign in modal
        Division signInModalContainer
        signInModalContainer:SetIdentifier("signInModalContainer")
        
        Division signInModal
        signInModal:SetIdentifier("signInModal")
        Heading signInModalHeading
        signInModalHeading:SetScale(2)
        signInModalHeading:AddText("Sign In To Quorum")
        signInModal:Add(signInModalHeading)
        Form signInForm
        signInForm:SetIdentifier("signInForm")
        FieldSet signInFieldSet

        Label signInUsername
        signInUsername:SetElementId("signInUsernameInput")
        signInUsername:SetClassAttribute("signInFormLabel")
        signInUsername:AddText("Username")
        signInFieldSet:Add(signInUsername)

        Input signInUsernameInput
        signInUsernameInput:SetIdentifier("signInUsernameInput")
        signInUsernameInput:SetClassAttribute("accountFormInput")
        signInUsernameInput:SetType("text")
        signInFieldSet:Add(signInUsernameInput)
        signInFieldSet:Add(break)

        Label signInPassword
        signInPassword:SetElementId("signInPasswordInput")
        signInPassword:SetClassAttribute("signInFormLabel")
        signInPassword:AddText("Password")
        signInFieldSet:Add(signInPassword)

        Input signInPasswordInput
        signInPasswordInput:SetIdentifier("signInPasswordInput")
        signInPasswordInput:SetClassAttribute("accountFormInput")
        signInPasswordInput:SetType("password")
        signInFieldSet:Add(signInPasswordInput)

        signInForm:Add(signInFieldSet)
        signInModal:Add(signInForm)

        Button signInFormCancelButton
        signInFormCancelButton:SetIdentifier("signInFormCancelButton")
        signInFormCancelButton:SetClassAttribute("accountFormButton")
        signInFormCancelButton:AddText("Cancel")
        signInFormCancelButton:SetType("button")
        signInModal:Add(signInFormCancelButton)

        //Button/spinner combo
        Division signInButtonSpinner
        signInButtonSpinner:SetIdentifier("signInButtonSpinner")
        
        Button signInFormSignInButton
        signInFormSignInButton:SetIdentifier("signInFormSignInButton")
        signInFormSignInButton:SetClassAttribute("accountFormButton")
        signInFormSignInButton:AddText("Sign In")
        signInFormSignInButton:SetType("submit")

        Division spinner
        spinner:SetClassAttribute("loader")

        signInButtonSpinner:Add(signInFormSignInButton)
        signInButtonSpinner:Add(spinner)
        signInModal:Add(signInButtonSpinner)

        signInModalContainer:Add(signInModal)
        Add(signInModalContainer)

        //registration modal
        Division signUpModalContainer
        signUpModalContainer:SetIdentifier("signUpModalContainer")
        
        Division signUpModal
        signUpModal:SetIdentifier("signUpModal")
        Heading signUpModalHeading
        signUpModalHeading:SetScale(2)
        signUpModalHeading:AddText("Sign Up For Quorum")
        signUpModal:Add(signUpModalHeading)
        Form signUpForm
        signUpForm:SetIdentifier("signUpForm")
        FieldSet signUpFieldSet

        //email
        Label signUpEmail
        signUpEmail:SetElementId("signUpEmailInput")
        signUpEmail:SetClassAttribute("signUpFormLabel")
        signUpEmail:AddText("Email")
        signUpFieldSet:Add(signUpEmail)

        Input signUpEmailInput
        signUpEmailInput:SetIdentifier("signUpEmailInput")
        signUpEmailInput:SetClassAttribute("accountFormInput")
        signUpEmailInput:SetType("text")
        signUpFieldSet:Add(signUpEmailInput)
        signUpFieldSet:Add(break)

        //first name
        Label signUpFirstName
        signUpFirstName:SetElementId("signUpFirstNameInput")
        signUpFirstName:SetClassAttribute("signUpFormLabel")
        signUpFirstName:AddText("First Name")
        signUpFieldSet:Add(signUpFirstName)

        Input signUpFirstNameInput
        signUpFirstNameInput:SetIdentifier("signUpFirstNameInput")
        signUpFirstNameInput:SetClassAttribute("accountFormInput")
        signUpFirstNameInput:SetType("text")
        signUpFieldSet:Add(signUpFirstNameInput)
        signUpFieldSet:Add(break)

        //last name
        Label signUpLastName
        signUpLastName:SetElementId("signUpLastNameInput")
        signUpLastName:SetClassAttribute("signUpFormLabel")
        signUpLastName:AddText("Last Name")
        signUpFieldSet:Add(signUpLastName)

        Input signUpLastNameInput
        signUpLastNameInput:SetIdentifier("signUpLastNameInput")
        signUpLastNameInput:SetClassAttribute("accountFormInput")
        signUpLastNameInput:SetType("text")
        signUpFieldSet:Add(signUpLastNameInput)
        signUpFieldSet:Add(break)

        //username
        Label signUpUsername
        signUpUsername:SetElementId("signUpUsernameInput")
        signUpUsername:SetClassAttribute("signUpFormLabel")
        signUpUsername:AddText("Username")
        signUpFieldSet:Add(signUpUsername)

        Input signUpUsernameInput
        signUpUsernameInput:SetIdentifier("signUpUsernameInput")
        signUpUsernameInput:SetClassAttribute("accountFormInput")
        signUpUsernameInput:SetType("text")
        signUpFieldSet:Add(signUpUsernameInput)
        signUpFieldSet:Add(break)

        //password
        Label signUpPassword
        signUpPassword:SetElementId("signUpPasswordInput")
        signUpPassword:SetClassAttribute("signUpFormLabel")
        signUpPassword:AddText("Password")
        signUpFieldSet:Add(signUpPassword)

        Input signUpPasswordInput
        signUpPasswordInput:SetIdentifier("signUpPasswordInput")
        signUpPasswordInput:SetClassAttribute("accountFormInput")
        signUpPasswordInput:SetType("password")
        signUpFieldSet:Add(signUpPasswordInput)
        signUpFieldSet:Add(break)

        //confirm password
        Label signUpConfirmPassword
        signUpConfirmPassword:SetElementId("signUpConfirmPasswordInput")
        signUpConfirmPassword:SetClassAttribute("signUpFormLabel")
        signUpConfirmPassword:AddText("Confirm Password")
        signUpFieldSet:Add(signUpConfirmPassword)

        Input signUpConfirmPasswordInput
        signUpConfirmPasswordInput:SetIdentifier("signUpConfirmPasswordInput")
        signUpConfirmPasswordInput:SetClassAttribute("accountFormInput")
        signUpConfirmPasswordInput:SetType("password")
        signUpFieldSet:Add(signUpConfirmPasswordInput)


        signUpForm:Add(signUpFieldSet)
        signUpModal:Add(signUpForm)

        Button signUpFormCancelButton
        signUpFormCancelButton:SetIdentifier("signUpFormCancelButton")
        signUpFormCancelButton:SetClassAttribute("accountFormButton")
        signUpFormCancelButton:AddText("Cancel")
        signUpFormCancelButton:SetType("button")
        signUpModal:Add(signUpFormCancelButton)

        //Button/spinner combo
        Division signUpButtonSpinner
        signUpButtonSpinner:SetIdentifier("signUpButtonSpinner")
        
        Button signUpFormSignUpButton
        signUpFormSignUpButton:SetIdentifier("signUpFormSignUpButton")
        signUpFormSignUpButton:SetClassAttribute("accountFormButton")
        signUpFormSignUpButton:AddText("Sign Up")
        signUpFormSignUpButton:SetType("submit")


        signUpButtonSpinner:Add(signUpFormSignUpButton)
        signUpButtonSpinner:Add(spinner)
        signUpModal:Add(signUpButtonSpinner)

        signUpModalContainer:Add(signUpModal)
        Add(signUpModalContainer)
    end
    
    action GetList returns UnorderedList
        return listBurger
    end

end
