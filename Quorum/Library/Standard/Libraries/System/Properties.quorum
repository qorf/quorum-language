package Libraries.System

use Libraries.System.File
use Libraries.Containers.HashTable

/*
The properties class is designed to gather information about the system
that the user is running. Currently, it supports a general property action, 
GetProperty, which can gather any known system property. It also currently
contains helper methods for determining which operating system the user is on
and for determining which web page was requested if this is a web project. System 
properties are equivalent to what are often termed "environment variables." The properties class
does query the operating system for information, but does not contain any state itself.

Attribute: Example
use Libraries.System.Properties

Properties properties
text address = properties:GetRequestedWebPage()
output address
*/
shared class Properties 
    
    /*
    This is a public constant for the operating system property name.
    */
    public constant text operatingSystem = "os.name"
    
    /* This is a public constant for the architecture property name. */
    public constant text architecture = "os.arch"

    /* This is a public property that is set to true if we are running on an ios simulator. */
    public constant text iosSimulator = "IOS-Simulator"

    /* This is a public constant for the java runtime name. */
    public constant text javaRuntimeName = "java.runtime.name"

    /* This asks the system for the operating system version. */
    public constant text version = "os.version"

    /*
    This is a public constant for the web address environment variable, if 
    one is set.
    */
    public constant text requestedWebPage = "quorum.url"

    /*
        This action returns a property from the system.

        Attribute: Parameter key the property being requested
        Attribute: Example

        use Libraries.System.Properties

        Properties properties
        text value = properties:GetProperty("os.name")
        output value
    */
    action GetProperty(text key) returns text
        if not HasPropertyNative(key)
            return ""
        else
            return GetPropertyNative(key)
        end
    end

    /*
        This action sets a property on the system.

        Attribute: Parameter key the property being requested
        Attribute: Parameter value the property value being set
        Attribute: Example

        use Libraries.System.Properties

        Properties properties
        properties:SetProperty("my.custom.property", "value")
    */
    action SetProperty(text key, text value)
        SetPropertyNative(key, value)
    end

    /*
        This action returns a the location of the running executable on the system.

        Attribute: Example

        use Libraries.System.Properties
        use Libraries.System.File

        Properties properties
        File file = properties:GetRunPath()
        output file:GetAbsolutePath()
    */
    system action GetRunLocation returns File

    /*
        This action returns an environment variable from the system.

        Attribute: Parameter key the property being requested
        Attribute: Example

        use Libraries.System.Properties

        Properties properties
        text value = properties:GetEnvironmentVariable("quorum.url")
        output value
    */
    action GetEnvironmentVariable(text key) returns text
        if not HasEnvironmentVariableNative(key)
            return ""
        else
            return GetEnvironmentVariableNative(key)
        end
    end

    /*
    This property returns the name of the operating system currently running
    the program.

    Attribute: Example
    use Libraries.System.Properties

    Properties properties
    text value = properties:GetOperatingSystemName()
    output value
    */
    action GetOperatingSystemName returns text
        return GetProperty(operatingSystem)
    end
    
/*
    This property returns the name of the architecture currently running
    the program. Depending on how Quorum is run, this property may return undefined.

    Attribute: Example
    use Libraries.System.Properties

    Properties properties
    text value = properties:GetArchitecture()
    output value
    */
    action GetArchitecture returns text
        return GetProperty(architecture)
    end
    /*
    This property returns the name of the operating system version currently running
    the program.

    Attribute: Example
    use Libraries.System.Properties

    Properties properties
    text value = properties:GetOperatingSystemVersion()
    output value
    */
    action GetOperatingSystemVersion returns text
        return GetProperty(version)
    end

    /*
    This property returns whether or not the program is running on Windows.

    Attribute: Example
    use Libraries.System.Properties

    Properties properties
    boolean value = properties:IsWindows()
    output value
    */
    action IsWindows returns boolean
        text os = GetOperatingSystemName()
        if os:StartsWith("Windows")
            return true
        end

        return false
    end

    /*
    This property returns whether or not the program is running on Mac.

    Attribute: Example
    use Libraries.System.Properties

    Properties properties
    boolean value = properties:IsMac()
    output value
    */
    action IsMac returns boolean
        text os = GetOperatingSystemName()
        if os:StartsWith("Mac")
            return true
        end

        return false
    end

    /*
    This property returns whether or not the program is running on Android.

    Attribute: Example
    use Libraries.System.Properties

    Properties properties
    boolean value = properties:IsAndroid()
    output value
    */
    action IsAndroid returns boolean
        text os = GetOperatingSystemName()text runtime = GetProperty(javaRuntimeName) // Android tablets often use 'Linux' for their os.name property, attempt to find 'Android' in a different property
        if os:Contains("Android Runtime") or runtime:Contains("Android Runtime")
            return true
        end

        return false
    end

//iOS Simulator

    /*
    This property returns whether or not the program is running on Apple's ios simulator.

    Attribute: Example
    use Libraries.System.Properties

    Properties properties
    boolean value = properties:IsIosSimulator()
    output value
    */
    action IsIosSimulator returns boolean
        if IsIos()
            text sim = GetProperty(iosSimulator)
            if sim not= undefined and sim = "true"
                return true
            else //if false, do a double check and inject the property if appropriate
                 //This isn't a perfect solution, but seems to work under most conditions. 
                 //There isn't an automatic way to detect the simulator though from MobiVM, so far as I can tell.
                text property = GetProperty("user.dir")
                if property not= undefined and property:Contains("CoreSimulator")
                    SetProperty(iosSimulator, "true")
                    return true
                else
                    SetProperty(iosSimulator, "false")
                end
            end
        end

        return false
    end

    /*
    This property returns whether or not the program is running on Apple's ios, either the simulator or the device.

    Attribute: Example
    use Libraries.System.Properties

    Properties properties
    boolean value = properties:IsIos()
    output value
    */
    action IsIos returns boolean
        text os = GetOperatingSystemName()
        if os:Contains("iOS")
            return true
        end

        return false
    end

    /*
    This property returns whether or not the program is running on a web browser.

    Attribute: Example
    use Libraries.System.Properties

    Properties properties
    boolean value = properties:IsWebBrowser()
    output value
    */
    action IsWebBrowser returns boolean
        text os = GetOperatingSystemName()
        if os:Contains("Web Browser")
            return true
        end

        return false
    end

    /*
    This helper method returns the requested web address if the project
    was a web project.

    Attribute: Example
    use Libraries.System.Properties

    Properties properties
    text address = properties:GetRequestedWebPage()
    output address
    */
    action GetRequestedWebPage returns text
        return GetEnvironmentVariable(requestedWebPage)
    end

    /*
        This action returns all properties on the system.

        Attribute: Example

        use Libraries.System.Properties

        Properties properties
        HashTable<text, text> table = properties:GetProperties()
        
    */
    action GetProperties returns HashTable<text, text>
        return GetPropertiesNative()
    end

    /*
        This action returns all environment variables on the system.

        Attribute: Example

        use Libraries.System.Properties

        Properties properties
        HashTable<text, text> table = properties:GetEnvironmentVariables()
        
    */
    action GetEnvironmentVariables returns HashTable<text, text>
        return GetEnvironmentVariablesNative()
    end

    private system action GetPropertiesNative returns HashTable<text, text>
    private system action SetPropertyNative(text key, text value)
    private system action GetPropertyNative(text key) returns text
    private system action HasPropertyNative(text key) returns boolean
    
    private system action GetEnvironmentVariablesNative returns HashTable<text, text>
    private system action GetEnvironmentVariableNative(text key) returns text
    private system action HasEnvironmentVariableNative(text key) returns boolean
end